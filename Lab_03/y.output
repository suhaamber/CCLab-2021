State 18 conflicts: 4 shift/reduce
State 21 conflicts: 2 shift/reduce


Grammar

    0 $accept: prm $end

    1 prm: HEADER MAIN_TYPE MAIN LB RB LCB BODY RCB

    2 BODY: DECLARATION_STATEMENTS BODY
    3     | PROGRAM_STATEMENTS BODY
    4     | PROGRAM_STATEMENTS
    5     | DECLARATION_STATEMENTS

    6 DECLARATION_STATEMENTS: DECLARATION_STATEMENT DECLARATION_STATEMENTS
    7                       | DECLARATION_STATEMENT

    8 DECLARATION_STATEMENT: DATA_TYPE VAR_LIST SC

    9 VAR_LIST: VAR COMA VAR_LIST
   10         | VAR

   11 MAIN_TYPE: INT

   12 DATA_TYPE: INT
   13          | CHAR
   14          | FLOAT
   15          | DOUBLE

   16 PROGRAM_STATEMENTS: PROGRAM_STATEMENT PROGRAM_STATEMENTS
   17                   | PROGRAM_STATEMENT

   18 PROGRAM_STATEMENT: VAR EQ A_EXPN SC
   19                  | IF LB LOGICAL_EXPN RB LCB BODY RCB ELSE LCB BODY RCB
   20                  | IF LB LOGICAL_EXPN RB LCB BODY RCB

   21 LOGICAL_EXPN: LOGICAL_EXPN OR LOGICAL_EXPN
   22             | LOGICAL_EXPN AND LOGICAL_EXPN
   23             | LOGICAL_EXPN EQCOMPARE LOGICAL_EXPN
   24             | LOGICAL_EXPN NEQCOMPARE LOGICAL_EXPN
   25             | LOGICAL_EXPN GTE LOGICAL_EXPN
   26             | LOGICAL_EXPN LTE LOGICAL_EXPN
   27             | LOGICAL_EXPN GT LOGICAL_EXPN
   28             | LOGICAL_EXPN LT LOGICAL_EXPN
   29             | LOGICAL_EXPN NOT LOGICAL_EXPN
   30             | LB LOGICAL_EXPN RB
   31             | VAR

   32 A_EXPN: A_EXPN PLUS A_EXPN
   33       | A_EXPN MINUS A_EXPN
   34       | A_EXPN MUL A_EXPN
   35       | A_EXPN DIV A_EXPN
   36       | A_EXPN MOD A_EXPN
   37       | A_EXPN EXP A_EXPN
   38       | A_EXPN UMINUS
   39       | A_EXPN UPLUS
   40       | LB A_EXPN RB
   41       | VAR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    HEADER (258) 1
    MAIN (259) 1
    LB (260) 1 19 20 30 40
    RB (261) 1 19 20 30 40
    LCB (262) 1 19 20
    RCB (263) 1 19 20
    SC (264) 8 18
    COMA (265) 9
    VAR <var_name> (266) 9 10 18 31 41
    EQ (267) 18
    PLUS (268) 32
    MINUS (269) 33
    MUL (270) 34
    DIV (271) 35
    MOD (272) 36
    EXP (273) 37
    UPLUS (274) 39
    UMINUS (275) 38
    IF (276) 19 20
    ELSE (277) 19
    EQCOMPARE (278) 23
    NEQCOMPARE (279) 24
    GTE (280) 25
    LTE (281) 26
    GT (282) 27
    LT (283) 28
    NOT (284) 29
    AND (285) 22
    OR (286) 21
    INT <data_type> (287) 11 12
    CHAR <data_type> (288) 13
    FLOAT <data_type> (289) 14
    DOUBLE <data_type> (290) 15


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    prm (37)
        on left: 1
        on right: 0
    BODY (38)
        on left: 2 3 4 5
        on right: 1 2 3 19 20
    DECLARATION_STATEMENTS (39)
        on left: 6 7
        on right: 2 5 6
    DECLARATION_STATEMENT (40)
        on left: 8
        on right: 6 7
    VAR_LIST (41)
        on left: 9 10
        on right: 8 9
    MAIN_TYPE (42)
        on left: 11
        on right: 1
    DATA_TYPE <data_type> (43)
        on left: 12 13 14 15
        on right: 8
    PROGRAM_STATEMENTS (44)
        on left: 16 17
        on right: 3 4 16
    PROGRAM_STATEMENT (45)
        on left: 18 19 20
        on right: 16 17
    LOGICAL_EXPN (46)
        on left: 21 22 23 24 25 26 27 28 29 30 31
        on right: 19 20 21 22 23 24 25 26 27 28 29 30
    A_EXPN (47)
        on left: 32 33 34 35 36 37 38 39 40 41
        on right: 18 32 33 34 35 36 37 38 39 40


State 0

    0 $accept: . prm $end

    HEADER  shift, and go to state 1

    prm  go to state 2


State 1

    1 prm: HEADER . MAIN_TYPE MAIN LB RB LCB BODY RCB

    INT  shift, and go to state 3

    MAIN_TYPE  go to state 4


State 2

    0 $accept: prm . $end

    $end  shift, and go to state 5


State 3

   11 MAIN_TYPE: INT .

    $default  reduce using rule 11 (MAIN_TYPE)


State 4

    1 prm: HEADER MAIN_TYPE . MAIN LB RB LCB BODY RCB

    MAIN  shift, and go to state 6


State 5

    0 $accept: prm $end .

    $default  accept


State 6

    1 prm: HEADER MAIN_TYPE MAIN . LB RB LCB BODY RCB

    LB  shift, and go to state 7


State 7

    1 prm: HEADER MAIN_TYPE MAIN LB . RB LCB BODY RCB

    RB  shift, and go to state 8


State 8

    1 prm: HEADER MAIN_TYPE MAIN LB RB . LCB BODY RCB

    LCB  shift, and go to state 9


State 9

    1 prm: HEADER MAIN_TYPE MAIN LB RB LCB . BODY RCB

    VAR     shift, and go to state 10
    IF      shift, and go to state 11
    INT     shift, and go to state 12
    CHAR    shift, and go to state 13
    FLOAT   shift, and go to state 14
    DOUBLE  shift, and go to state 15

    BODY                    go to state 16
    DECLARATION_STATEMENTS  go to state 17
    DECLARATION_STATEMENT   go to state 18
    DATA_TYPE               go to state 19
    PROGRAM_STATEMENTS      go to state 20
    PROGRAM_STATEMENT       go to state 21


State 10

   18 PROGRAM_STATEMENT: VAR . EQ A_EXPN SC

    EQ  shift, and go to state 22


State 11

   19 PROGRAM_STATEMENT: IF . LB LOGICAL_EXPN RB LCB BODY RCB ELSE LCB BODY RCB
   20                  | IF . LB LOGICAL_EXPN RB LCB BODY RCB

    LB  shift, and go to state 23


State 12

   12 DATA_TYPE: INT .

    $default  reduce using rule 12 (DATA_TYPE)


State 13

   13 DATA_TYPE: CHAR .

    $default  reduce using rule 13 (DATA_TYPE)


State 14

   14 DATA_TYPE: FLOAT .

    $default  reduce using rule 14 (DATA_TYPE)


State 15

   15 DATA_TYPE: DOUBLE .

    $default  reduce using rule 15 (DATA_TYPE)


State 16

    1 prm: HEADER MAIN_TYPE MAIN LB RB LCB BODY . RCB

    RCB  shift, and go to state 24


State 17

    2 BODY: DECLARATION_STATEMENTS . BODY
    5     | DECLARATION_STATEMENTS .

    VAR     shift, and go to state 10
    IF      shift, and go to state 11
    INT     shift, and go to state 12
    CHAR    shift, and go to state 13
    FLOAT   shift, and go to state 14
    DOUBLE  shift, and go to state 15

    $default  reduce using rule 5 (BODY)

    BODY                    go to state 25
    DECLARATION_STATEMENTS  go to state 17
    DECLARATION_STATEMENT   go to state 18
    DATA_TYPE               go to state 19
    PROGRAM_STATEMENTS      go to state 20
    PROGRAM_STATEMENT       go to state 21


State 18

    6 DECLARATION_STATEMENTS: DECLARATION_STATEMENT . DECLARATION_STATEMENTS
    7                       | DECLARATION_STATEMENT .

    INT     shift, and go to state 12
    CHAR    shift, and go to state 13
    FLOAT   shift, and go to state 14
    DOUBLE  shift, and go to state 15

    INT       [reduce using rule 7 (DECLARATION_STATEMENTS)]
    CHAR      [reduce using rule 7 (DECLARATION_STATEMENTS)]
    FLOAT     [reduce using rule 7 (DECLARATION_STATEMENTS)]
    DOUBLE    [reduce using rule 7 (DECLARATION_STATEMENTS)]
    $default  reduce using rule 7 (DECLARATION_STATEMENTS)

    DECLARATION_STATEMENTS  go to state 26
    DECLARATION_STATEMENT   go to state 18
    DATA_TYPE               go to state 19


State 19

    8 DECLARATION_STATEMENT: DATA_TYPE . VAR_LIST SC

    VAR  shift, and go to state 27

    VAR_LIST  go to state 28


State 20

    3 BODY: PROGRAM_STATEMENTS . BODY
    4     | PROGRAM_STATEMENTS .

    VAR     shift, and go to state 10
    IF      shift, and go to state 11
    INT     shift, and go to state 12
    CHAR    shift, and go to state 13
    FLOAT   shift, and go to state 14
    DOUBLE  shift, and go to state 15

    $default  reduce using rule 4 (BODY)

    BODY                    go to state 29
    DECLARATION_STATEMENTS  go to state 17
    DECLARATION_STATEMENT   go to state 18
    DATA_TYPE               go to state 19
    PROGRAM_STATEMENTS      go to state 20
    PROGRAM_STATEMENT       go to state 21


State 21

   16 PROGRAM_STATEMENTS: PROGRAM_STATEMENT . PROGRAM_STATEMENTS
   17                   | PROGRAM_STATEMENT .

    VAR  shift, and go to state 10
    IF   shift, and go to state 11

    VAR       [reduce using rule 17 (PROGRAM_STATEMENTS)]
    IF        [reduce using rule 17 (PROGRAM_STATEMENTS)]
    $default  reduce using rule 17 (PROGRAM_STATEMENTS)

    PROGRAM_STATEMENTS  go to state 30
    PROGRAM_STATEMENT   go to state 21


State 22

   18 PROGRAM_STATEMENT: VAR EQ . A_EXPN SC

    LB   shift, and go to state 31
    VAR  shift, and go to state 32

    A_EXPN  go to state 33


State 23

   19 PROGRAM_STATEMENT: IF LB . LOGICAL_EXPN RB LCB BODY RCB ELSE LCB BODY RCB
   20                  | IF LB . LOGICAL_EXPN RB LCB BODY RCB

    LB   shift, and go to state 34
    VAR  shift, and go to state 35

    LOGICAL_EXPN  go to state 36


State 24

    1 prm: HEADER MAIN_TYPE MAIN LB RB LCB BODY RCB .

    $default  reduce using rule 1 (prm)


State 25

    2 BODY: DECLARATION_STATEMENTS BODY .

    $default  reduce using rule 2 (BODY)


State 26

    6 DECLARATION_STATEMENTS: DECLARATION_STATEMENT DECLARATION_STATEMENTS .

    $default  reduce using rule 6 (DECLARATION_STATEMENTS)


State 27

    9 VAR_LIST: VAR . COMA VAR_LIST
   10         | VAR .

    COMA  shift, and go to state 37

    $default  reduce using rule 10 (VAR_LIST)


State 28

    8 DECLARATION_STATEMENT: DATA_TYPE VAR_LIST . SC

    SC  shift, and go to state 38


State 29

    3 BODY: PROGRAM_STATEMENTS BODY .

    $default  reduce using rule 3 (BODY)


State 30

   16 PROGRAM_STATEMENTS: PROGRAM_STATEMENT PROGRAM_STATEMENTS .

    $default  reduce using rule 16 (PROGRAM_STATEMENTS)


State 31

   40 A_EXPN: LB . A_EXPN RB

    LB   shift, and go to state 31
    VAR  shift, and go to state 32

    A_EXPN  go to state 39


State 32

   41 A_EXPN: VAR .

    $default  reduce using rule 41 (A_EXPN)


State 33

   18 PROGRAM_STATEMENT: VAR EQ A_EXPN . SC
   32 A_EXPN: A_EXPN . PLUS A_EXPN
   33       | A_EXPN . MINUS A_EXPN
   34       | A_EXPN . MUL A_EXPN
   35       | A_EXPN . DIV A_EXPN
   36       | A_EXPN . MOD A_EXPN
   37       | A_EXPN . EXP A_EXPN
   38       | A_EXPN . UMINUS
   39       | A_EXPN . UPLUS

    SC      shift, and go to state 40
    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    MUL     shift, and go to state 43
    DIV     shift, and go to state 44
    MOD     shift, and go to state 45
    EXP     shift, and go to state 46
    UPLUS   shift, and go to state 47
    UMINUS  shift, and go to state 48


State 34

   30 LOGICAL_EXPN: LB . LOGICAL_EXPN RB

    LB   shift, and go to state 34
    VAR  shift, and go to state 35

    LOGICAL_EXPN  go to state 49


State 35

   31 LOGICAL_EXPN: VAR .

    $default  reduce using rule 31 (LOGICAL_EXPN)


State 36

   19 PROGRAM_STATEMENT: IF LB LOGICAL_EXPN . RB LCB BODY RCB ELSE LCB BODY RCB
   20                  | IF LB LOGICAL_EXPN . RB LCB BODY RCB
   21 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   22             | LOGICAL_EXPN . AND LOGICAL_EXPN
   23             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   24             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   25             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   26             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   27             | LOGICAL_EXPN . GT LOGICAL_EXPN
   28             | LOGICAL_EXPN . LT LOGICAL_EXPN
   29             | LOGICAL_EXPN . NOT LOGICAL_EXPN

    RB          shift, and go to state 50
    EQCOMPARE   shift, and go to state 51
    NEQCOMPARE  shift, and go to state 52
    GTE         shift, and go to state 53
    LTE         shift, and go to state 54
    GT          shift, and go to state 55
    LT          shift, and go to state 56
    NOT         shift, and go to state 57
    AND         shift, and go to state 58
    OR          shift, and go to state 59


State 37

    9 VAR_LIST: VAR COMA . VAR_LIST

    VAR  shift, and go to state 27

    VAR_LIST  go to state 60


State 38

    8 DECLARATION_STATEMENT: DATA_TYPE VAR_LIST SC .

    $default  reduce using rule 8 (DECLARATION_STATEMENT)


State 39

   32 A_EXPN: A_EXPN . PLUS A_EXPN
   33       | A_EXPN . MINUS A_EXPN
   34       | A_EXPN . MUL A_EXPN
   35       | A_EXPN . DIV A_EXPN
   36       | A_EXPN . MOD A_EXPN
   37       | A_EXPN . EXP A_EXPN
   38       | A_EXPN . UMINUS
   39       | A_EXPN . UPLUS
   40       | LB A_EXPN . RB

    RB      shift, and go to state 61
    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    MUL     shift, and go to state 43
    DIV     shift, and go to state 44
    MOD     shift, and go to state 45
    EXP     shift, and go to state 46
    UPLUS   shift, and go to state 47
    UMINUS  shift, and go to state 48


State 40

   18 PROGRAM_STATEMENT: VAR EQ A_EXPN SC .

    $default  reduce using rule 18 (PROGRAM_STATEMENT)


State 41

   32 A_EXPN: A_EXPN PLUS . A_EXPN

    LB   shift, and go to state 31
    VAR  shift, and go to state 32

    A_EXPN  go to state 62


State 42

   33 A_EXPN: A_EXPN MINUS . A_EXPN

    LB   shift, and go to state 31
    VAR  shift, and go to state 32

    A_EXPN  go to state 63


State 43

   34 A_EXPN: A_EXPN MUL . A_EXPN

    LB   shift, and go to state 31
    VAR  shift, and go to state 32

    A_EXPN  go to state 64


State 44

   35 A_EXPN: A_EXPN DIV . A_EXPN

    LB   shift, and go to state 31
    VAR  shift, and go to state 32

    A_EXPN  go to state 65


State 45

   36 A_EXPN: A_EXPN MOD . A_EXPN

    LB   shift, and go to state 31
    VAR  shift, and go to state 32

    A_EXPN  go to state 66


State 46

   37 A_EXPN: A_EXPN EXP . A_EXPN

    LB   shift, and go to state 31
    VAR  shift, and go to state 32

    A_EXPN  go to state 67


State 47

   39 A_EXPN: A_EXPN UPLUS .

    $default  reduce using rule 39 (A_EXPN)


State 48

   38 A_EXPN: A_EXPN UMINUS .

    $default  reduce using rule 38 (A_EXPN)


State 49

   21 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   22             | LOGICAL_EXPN . AND LOGICAL_EXPN
   23             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   24             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   25             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   26             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   27             | LOGICAL_EXPN . GT LOGICAL_EXPN
   28             | LOGICAL_EXPN . LT LOGICAL_EXPN
   29             | LOGICAL_EXPN . NOT LOGICAL_EXPN
   30             | LB LOGICAL_EXPN . RB

    RB          shift, and go to state 68
    EQCOMPARE   shift, and go to state 51
    NEQCOMPARE  shift, and go to state 52
    GTE         shift, and go to state 53
    LTE         shift, and go to state 54
    GT          shift, and go to state 55
    LT          shift, and go to state 56
    NOT         shift, and go to state 57
    AND         shift, and go to state 58
    OR          shift, and go to state 59


State 50

   19 PROGRAM_STATEMENT: IF LB LOGICAL_EXPN RB . LCB BODY RCB ELSE LCB BODY RCB
   20                  | IF LB LOGICAL_EXPN RB . LCB BODY RCB

    LCB  shift, and go to state 69


State 51

   23 LOGICAL_EXPN: LOGICAL_EXPN EQCOMPARE . LOGICAL_EXPN

    LB   shift, and go to state 34
    VAR  shift, and go to state 35

    LOGICAL_EXPN  go to state 70


State 52

   24 LOGICAL_EXPN: LOGICAL_EXPN NEQCOMPARE . LOGICAL_EXPN

    LB   shift, and go to state 34
    VAR  shift, and go to state 35

    LOGICAL_EXPN  go to state 71


State 53

   25 LOGICAL_EXPN: LOGICAL_EXPN GTE . LOGICAL_EXPN

    LB   shift, and go to state 34
    VAR  shift, and go to state 35

    LOGICAL_EXPN  go to state 72


State 54

   26 LOGICAL_EXPN: LOGICAL_EXPN LTE . LOGICAL_EXPN

    LB   shift, and go to state 34
    VAR  shift, and go to state 35

    LOGICAL_EXPN  go to state 73


State 55

   27 LOGICAL_EXPN: LOGICAL_EXPN GT . LOGICAL_EXPN

    LB   shift, and go to state 34
    VAR  shift, and go to state 35

    LOGICAL_EXPN  go to state 74


State 56

   28 LOGICAL_EXPN: LOGICAL_EXPN LT . LOGICAL_EXPN

    LB   shift, and go to state 34
    VAR  shift, and go to state 35

    LOGICAL_EXPN  go to state 75


State 57

   29 LOGICAL_EXPN: LOGICAL_EXPN NOT . LOGICAL_EXPN

    LB   shift, and go to state 34
    VAR  shift, and go to state 35

    LOGICAL_EXPN  go to state 76


State 58

   22 LOGICAL_EXPN: LOGICAL_EXPN AND . LOGICAL_EXPN

    LB   shift, and go to state 34
    VAR  shift, and go to state 35

    LOGICAL_EXPN  go to state 77


State 59

   21 LOGICAL_EXPN: LOGICAL_EXPN OR . LOGICAL_EXPN

    LB   shift, and go to state 34
    VAR  shift, and go to state 35

    LOGICAL_EXPN  go to state 78


State 60

    9 VAR_LIST: VAR COMA VAR_LIST .

    $default  reduce using rule 9 (VAR_LIST)


State 61

   40 A_EXPN: LB A_EXPN RB .

    $default  reduce using rule 40 (A_EXPN)


State 62

   32 A_EXPN: A_EXPN . PLUS A_EXPN
   32       | A_EXPN PLUS A_EXPN .
   33       | A_EXPN . MINUS A_EXPN
   34       | A_EXPN . MUL A_EXPN
   35       | A_EXPN . DIV A_EXPN
   36       | A_EXPN . MOD A_EXPN
   37       | A_EXPN . EXP A_EXPN
   38       | A_EXPN . UMINUS
   39       | A_EXPN . UPLUS

    MUL  shift, and go to state 43
    DIV  shift, and go to state 44
    MOD  shift, and go to state 45

    $default  reduce using rule 32 (A_EXPN)


State 63

   32 A_EXPN: A_EXPN . PLUS A_EXPN
   33       | A_EXPN . MINUS A_EXPN
   33       | A_EXPN MINUS A_EXPN .
   34       | A_EXPN . MUL A_EXPN
   35       | A_EXPN . DIV A_EXPN
   36       | A_EXPN . MOD A_EXPN
   37       | A_EXPN . EXP A_EXPN
   38       | A_EXPN . UMINUS
   39       | A_EXPN . UPLUS

    MUL  shift, and go to state 43
    DIV  shift, and go to state 44
    MOD  shift, and go to state 45

    $default  reduce using rule 33 (A_EXPN)


State 64

   32 A_EXPN: A_EXPN . PLUS A_EXPN
   33       | A_EXPN . MINUS A_EXPN
   34       | A_EXPN . MUL A_EXPN
   34       | A_EXPN MUL A_EXPN .
   35       | A_EXPN . DIV A_EXPN
   36       | A_EXPN . MOD A_EXPN
   37       | A_EXPN . EXP A_EXPN
   38       | A_EXPN . UMINUS
   39       | A_EXPN . UPLUS

    $default  reduce using rule 34 (A_EXPN)


State 65

   32 A_EXPN: A_EXPN . PLUS A_EXPN
   33       | A_EXPN . MINUS A_EXPN
   34       | A_EXPN . MUL A_EXPN
   35       | A_EXPN . DIV A_EXPN
   35       | A_EXPN DIV A_EXPN .
   36       | A_EXPN . MOD A_EXPN
   37       | A_EXPN . EXP A_EXPN
   38       | A_EXPN . UMINUS
   39       | A_EXPN . UPLUS

    $default  reduce using rule 35 (A_EXPN)


State 66

   32 A_EXPN: A_EXPN . PLUS A_EXPN
   33       | A_EXPN . MINUS A_EXPN
   34       | A_EXPN . MUL A_EXPN
   35       | A_EXPN . DIV A_EXPN
   36       | A_EXPN . MOD A_EXPN
   36       | A_EXPN MOD A_EXPN .
   37       | A_EXPN . EXP A_EXPN
   38       | A_EXPN . UMINUS
   39       | A_EXPN . UPLUS

    $default  reduce using rule 36 (A_EXPN)


State 67

   32 A_EXPN: A_EXPN . PLUS A_EXPN
   33       | A_EXPN . MINUS A_EXPN
   34       | A_EXPN . MUL A_EXPN
   35       | A_EXPN . DIV A_EXPN
   36       | A_EXPN . MOD A_EXPN
   37       | A_EXPN . EXP A_EXPN
   37       | A_EXPN EXP A_EXPN .
   38       | A_EXPN . UMINUS
   39       | A_EXPN . UPLUS

    PLUS   shift, and go to state 41
    MINUS  shift, and go to state 42
    MUL    shift, and go to state 43
    DIV    shift, and go to state 44
    MOD    shift, and go to state 45
    EXP    shift, and go to state 46

    $default  reduce using rule 37 (A_EXPN)


State 68

   30 LOGICAL_EXPN: LB LOGICAL_EXPN RB .

    $default  reduce using rule 30 (LOGICAL_EXPN)


State 69

   19 PROGRAM_STATEMENT: IF LB LOGICAL_EXPN RB LCB . BODY RCB ELSE LCB BODY RCB
   20                  | IF LB LOGICAL_EXPN RB LCB . BODY RCB

    VAR     shift, and go to state 10
    IF      shift, and go to state 11
    INT     shift, and go to state 12
    CHAR    shift, and go to state 13
    FLOAT   shift, and go to state 14
    DOUBLE  shift, and go to state 15

    BODY                    go to state 79
    DECLARATION_STATEMENTS  go to state 17
    DECLARATION_STATEMENT   go to state 18
    DATA_TYPE               go to state 19
    PROGRAM_STATEMENTS      go to state 20
    PROGRAM_STATEMENT       go to state 21


State 70

   21 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   22             | LOGICAL_EXPN . AND LOGICAL_EXPN
   23             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   23             | LOGICAL_EXPN EQCOMPARE LOGICAL_EXPN .
   24             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   25             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   26             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   27             | LOGICAL_EXPN . GT LOGICAL_EXPN
   28             | LOGICAL_EXPN . LT LOGICAL_EXPN
   29             | LOGICAL_EXPN . NOT LOGICAL_EXPN

    GTE  shift, and go to state 53
    LTE  shift, and go to state 54
    GT   shift, and go to state 55
    LT   shift, and go to state 56
    NOT  shift, and go to state 57

    $default  reduce using rule 23 (LOGICAL_EXPN)


State 71

   21 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   22             | LOGICAL_EXPN . AND LOGICAL_EXPN
   23             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   24             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   24             | LOGICAL_EXPN NEQCOMPARE LOGICAL_EXPN .
   25             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   26             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   27             | LOGICAL_EXPN . GT LOGICAL_EXPN
   28             | LOGICAL_EXPN . LT LOGICAL_EXPN
   29             | LOGICAL_EXPN . NOT LOGICAL_EXPN

    GTE  shift, and go to state 53
    LTE  shift, and go to state 54
    GT   shift, and go to state 55
    LT   shift, and go to state 56
    NOT  shift, and go to state 57

    $default  reduce using rule 24 (LOGICAL_EXPN)


State 72

   21 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   22             | LOGICAL_EXPN . AND LOGICAL_EXPN
   23             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   24             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   25             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   25             | LOGICAL_EXPN GTE LOGICAL_EXPN .
   26             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   27             | LOGICAL_EXPN . GT LOGICAL_EXPN
   28             | LOGICAL_EXPN . LT LOGICAL_EXPN
   29             | LOGICAL_EXPN . NOT LOGICAL_EXPN

    NOT  shift, and go to state 57

    $default  reduce using rule 25 (LOGICAL_EXPN)


State 73

   21 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   22             | LOGICAL_EXPN . AND LOGICAL_EXPN
   23             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   24             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   25             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   26             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   26             | LOGICAL_EXPN LTE LOGICAL_EXPN .
   27             | LOGICAL_EXPN . GT LOGICAL_EXPN
   28             | LOGICAL_EXPN . LT LOGICAL_EXPN
   29             | LOGICAL_EXPN . NOT LOGICAL_EXPN

    NOT  shift, and go to state 57

    $default  reduce using rule 26 (LOGICAL_EXPN)


State 74

   21 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   22             | LOGICAL_EXPN . AND LOGICAL_EXPN
   23             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   24             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   25             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   26             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   27             | LOGICAL_EXPN . GT LOGICAL_EXPN
   27             | LOGICAL_EXPN GT LOGICAL_EXPN .
   28             | LOGICAL_EXPN . LT LOGICAL_EXPN
   29             | LOGICAL_EXPN . NOT LOGICAL_EXPN

    NOT  shift, and go to state 57

    $default  reduce using rule 27 (LOGICAL_EXPN)


State 75

   21 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   22             | LOGICAL_EXPN . AND LOGICAL_EXPN
   23             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   24             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   25             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   26             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   27             | LOGICAL_EXPN . GT LOGICAL_EXPN
   28             | LOGICAL_EXPN . LT LOGICAL_EXPN
   28             | LOGICAL_EXPN LT LOGICAL_EXPN .
   29             | LOGICAL_EXPN . NOT LOGICAL_EXPN

    NOT  shift, and go to state 57

    $default  reduce using rule 28 (LOGICAL_EXPN)


State 76

   21 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   22             | LOGICAL_EXPN . AND LOGICAL_EXPN
   23             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   24             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   25             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   26             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   27             | LOGICAL_EXPN . GT LOGICAL_EXPN
   28             | LOGICAL_EXPN . LT LOGICAL_EXPN
   29             | LOGICAL_EXPN . NOT LOGICAL_EXPN
   29             | LOGICAL_EXPN NOT LOGICAL_EXPN .

    NOT  shift, and go to state 57

    $default  reduce using rule 29 (LOGICAL_EXPN)


State 77

   21 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   22             | LOGICAL_EXPN . AND LOGICAL_EXPN
   22             | LOGICAL_EXPN AND LOGICAL_EXPN .
   23             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   24             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   25             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   26             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   27             | LOGICAL_EXPN . GT LOGICAL_EXPN
   28             | LOGICAL_EXPN . LT LOGICAL_EXPN
   29             | LOGICAL_EXPN . NOT LOGICAL_EXPN

    EQCOMPARE   shift, and go to state 51
    NEQCOMPARE  shift, and go to state 52
    GTE         shift, and go to state 53
    LTE         shift, and go to state 54
    GT          shift, and go to state 55
    LT          shift, and go to state 56
    NOT         shift, and go to state 57

    $default  reduce using rule 22 (LOGICAL_EXPN)


State 78

   21 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   21             | LOGICAL_EXPN OR LOGICAL_EXPN .
   22             | LOGICAL_EXPN . AND LOGICAL_EXPN
   23             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   24             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   25             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   26             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   27             | LOGICAL_EXPN . GT LOGICAL_EXPN
   28             | LOGICAL_EXPN . LT LOGICAL_EXPN
   29             | LOGICAL_EXPN . NOT LOGICAL_EXPN

    EQCOMPARE   shift, and go to state 51
    NEQCOMPARE  shift, and go to state 52
    GTE         shift, and go to state 53
    LTE         shift, and go to state 54
    GT          shift, and go to state 55
    LT          shift, and go to state 56
    NOT         shift, and go to state 57

    $default  reduce using rule 21 (LOGICAL_EXPN)


State 79

   19 PROGRAM_STATEMENT: IF LB LOGICAL_EXPN RB LCB BODY . RCB ELSE LCB BODY RCB
   20                  | IF LB LOGICAL_EXPN RB LCB BODY . RCB

    RCB  shift, and go to state 80


State 80

   19 PROGRAM_STATEMENT: IF LB LOGICAL_EXPN RB LCB BODY RCB . ELSE LCB BODY RCB
   20                  | IF LB LOGICAL_EXPN RB LCB BODY RCB .

    ELSE  shift, and go to state 81

    $default  reduce using rule 20 (PROGRAM_STATEMENT)


State 81

   19 PROGRAM_STATEMENT: IF LB LOGICAL_EXPN RB LCB BODY RCB ELSE . LCB BODY RCB

    LCB  shift, and go to state 82


State 82

   19 PROGRAM_STATEMENT: IF LB LOGICAL_EXPN RB LCB BODY RCB ELSE LCB . BODY RCB

    VAR     shift, and go to state 10
    IF      shift, and go to state 11
    INT     shift, and go to state 12
    CHAR    shift, and go to state 13
    FLOAT   shift, and go to state 14
    DOUBLE  shift, and go to state 15

    BODY                    go to state 83
    DECLARATION_STATEMENTS  go to state 17
    DECLARATION_STATEMENT   go to state 18
    DATA_TYPE               go to state 19
    PROGRAM_STATEMENTS      go to state 20
    PROGRAM_STATEMENT       go to state 21


State 83

   19 PROGRAM_STATEMENT: IF LB LOGICAL_EXPN RB LCB BODY RCB ELSE LCB BODY . RCB

    RCB  shift, and go to state 84


State 84

   19 PROGRAM_STATEMENT: IF LB LOGICAL_EXPN RB LCB BODY RCB ELSE LCB BODY RCB .

    $default  reduce using rule 19 (PROGRAM_STATEMENT)
