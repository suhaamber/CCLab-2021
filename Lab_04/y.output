State 22 conflicts: 4 shift/reduce
State 25 conflicts: 6 shift/reduce
State 89 conflicts: 1 reduce/reduce
State 90 conflicts: 1 reduce/reduce


Grammar

    0 $accept: prm $end

    1 prm: HEADER MAIN_TYPE MAIN LB RB LCB BODY RCB

    2 BODY: DECLARATION_STATEMENTS BODY
    3     | PROGRAM_STATEMENTS BODY
    4     | PROGRAM_STATEMENTS
    5     | DECLARATION_STATEMENTS

    6 DECLARATION_STATEMENTS: DECLARATION_STATEMENT DECLARATION_STATEMENTS
    7                       | DECLARATION_STATEMENT

    8 DECLARATION_STATEMENT: DATA_TYPE VAR_LIST SC

    9 VAR_LIST: VAR COMA VAR_LIST
   10         | VAR

   11 MAIN_TYPE: INT

   12 DATA_TYPE: INT
   13          | CHAR
   14          | FLOAT
   15          | DOUBLE

   16 PROGRAM_STATEMENTS: PROGRAM_STATEMENT PROGRAM_STATEMENTS
   17                   | PROGRAM_STATEMENT

   18 PROGRAM_STATEMENT: VAR EQ A_EXPN SC
   19                  | IF LB LOGICAL_EXPN RB LCB BODY RCB ELSE LCB BODY RCB
   20                  | IF LB LOGICAL_EXPN RB LCB BODY RCB
   21                  | LB LOGICAL_EXPN RB QUESM LCB BODY RCB COLON LCB BODY RCB
   22                  | FOR LB PROGRAM_STATEMENT LOGICAL_EXPN SC A_EXPN RB LCB BODY RCB
   23                  | FOR LB A_EXPN SC LOGICAL_EXPN SC A_EXPN RB LCB BODY RCB
   24                  | WHILE LB LOGICAL_EXPN RB LCB BODY RCB
   25                  | DO LCB BODY RCB WHILE LB LOGICAL_EXPN RB SC

   26 LOGICAL_EXPN: LOGICAL_EXPN OR LOGICAL_EXPN
   27             | LOGICAL_EXPN AND LOGICAL_EXPN
   28             | LOGICAL_EXPN EQCOMPARE LOGICAL_EXPN
   29             | LOGICAL_EXPN NEQCOMPARE LOGICAL_EXPN
   30             | LOGICAL_EXPN GTE LOGICAL_EXPN
   31             | LOGICAL_EXPN LTE LOGICAL_EXPN
   32             | LOGICAL_EXPN GT LOGICAL_EXPN
   33             | LOGICAL_EXPN LT LOGICAL_EXPN
   34             | NOT LOGICAL_EXPN
   35             | LB LOGICAL_EXPN RB
   36             | NUMINT
   37             | VAR

   38 A_EXPN: A_EXPN PLUS A_EXPN
   39       | A_EXPN MINUS A_EXPN
   40       | A_EXPN MUL A_EXPN
   41       | A_EXPN DIV A_EXPN
   42       | A_EXPN MOD A_EXPN
   43       | A_EXPN EXP A_EXPN
   44       | A_EXPN UMINUS
   45       | A_EXPN UPLUS
   46       | LB A_EXPN RB
   47       | NUMINT
   48       | VAR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    HEADER (258) 1
    MAIN (259) 1
    LB (260) 1 19 20 21 22 23 24 25 35 46
    RB (261) 1 19 20 21 22 23 24 25 35 46
    LCB (262) 1 19 20 21 22 23 24 25
    RCB (263) 1 19 20 21 22 23 24 25
    SC (264) 8 18 22 23 25
    COMA (265) 9
    VAR <var_name> (266) 9 10 18 37 48
    EQ (267) 18
    PLUS (268) 38
    MINUS (269) 39
    MUL (270) 40
    DIV (271) 41
    MOD (272) 42
    EXP (273) 43
    UPLUS (274) 45
    UMINUS (275) 44
    IF (276) 19 20
    ELSE (277) 19
    EQCOMPARE (278) 28
    NEQCOMPARE (279) 29
    GTE (280) 30
    LTE (281) 31
    GT (282) 32
    LT (283) 33
    NOT (284) 34
    AND (285) 27
    OR (286) 26
    QUESM (287) 21
    COLON (288) 21
    FOR (289) 22 23
    WHILE (290) 24 25
    DO (291) 25
    NUMINT (292) 36 47
    INT <data_type> (293) 11 12
    CHAR <data_type> (294) 13
    FLOAT <data_type> (295) 14
    DOUBLE <data_type> (296) 15


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    prm (43)
        on left: 1
        on right: 0
    BODY (44)
        on left: 2 3 4 5
        on right: 1 2 3 19 20 21 22 23 24 25
    DECLARATION_STATEMENTS (45)
        on left: 6 7
        on right: 2 5 6
    DECLARATION_STATEMENT (46)
        on left: 8
        on right: 6 7
    VAR_LIST (47)
        on left: 9 10
        on right: 8 9
    MAIN_TYPE (48)
        on left: 11
        on right: 1
    DATA_TYPE <data_type> (49)
        on left: 12 13 14 15
        on right: 8
    PROGRAM_STATEMENTS (50)
        on left: 16 17
        on right: 3 4 16
    PROGRAM_STATEMENT (51)
        on left: 18 19 20 21 22 23 24 25
        on right: 16 17 22
    LOGICAL_EXPN (52)
        on left: 26 27 28 29 30 31 32 33 34 35 36 37
        on right: 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
    A_EXPN (53)
        on left: 38 39 40 41 42 43 44 45 46 47 48
        on right: 18 22 23 38 39 40 41 42 43 44 45 46


State 0

    0 $accept: . prm $end

    HEADER  shift, and go to state 1

    prm  go to state 2


State 1

    1 prm: HEADER . MAIN_TYPE MAIN LB RB LCB BODY RCB

    INT  shift, and go to state 3

    MAIN_TYPE  go to state 4


State 2

    0 $accept: prm . $end

    $end  shift, and go to state 5


State 3

   11 MAIN_TYPE: INT .

    $default  reduce using rule 11 (MAIN_TYPE)


State 4

    1 prm: HEADER MAIN_TYPE . MAIN LB RB LCB BODY RCB

    MAIN  shift, and go to state 6


State 5

    0 $accept: prm $end .

    $default  accept


State 6

    1 prm: HEADER MAIN_TYPE MAIN . LB RB LCB BODY RCB

    LB  shift, and go to state 7


State 7

    1 prm: HEADER MAIN_TYPE MAIN LB . RB LCB BODY RCB

    RB  shift, and go to state 8


State 8

    1 prm: HEADER MAIN_TYPE MAIN LB RB . LCB BODY RCB

    LCB  shift, and go to state 9


State 9

    1 prm: HEADER MAIN_TYPE MAIN LB RB LCB . BODY RCB

    LB      shift, and go to state 10
    VAR     shift, and go to state 11
    IF      shift, and go to state 12
    FOR     shift, and go to state 13
    WHILE   shift, and go to state 14
    DO      shift, and go to state 15
    INT     shift, and go to state 16
    CHAR    shift, and go to state 17
    FLOAT   shift, and go to state 18
    DOUBLE  shift, and go to state 19

    BODY                    go to state 20
    DECLARATION_STATEMENTS  go to state 21
    DECLARATION_STATEMENT   go to state 22
    DATA_TYPE               go to state 23
    PROGRAM_STATEMENTS      go to state 24
    PROGRAM_STATEMENT       go to state 25


State 10

   21 PROGRAM_STATEMENT: LB . LOGICAL_EXPN RB QUESM LCB BODY RCB COLON LCB BODY RCB

    LB      shift, and go to state 26
    VAR     shift, and go to state 27
    NOT     shift, and go to state 28
    NUMINT  shift, and go to state 29

    LOGICAL_EXPN  go to state 30


State 11

   18 PROGRAM_STATEMENT: VAR . EQ A_EXPN SC

    EQ  shift, and go to state 31


State 12

   19 PROGRAM_STATEMENT: IF . LB LOGICAL_EXPN RB LCB BODY RCB ELSE LCB BODY RCB
   20                  | IF . LB LOGICAL_EXPN RB LCB BODY RCB

    LB  shift, and go to state 32


State 13

   22 PROGRAM_STATEMENT: FOR . LB PROGRAM_STATEMENT LOGICAL_EXPN SC A_EXPN RB LCB BODY RCB
   23                  | FOR . LB A_EXPN SC LOGICAL_EXPN SC A_EXPN RB LCB BODY RCB

    LB  shift, and go to state 33


State 14

   24 PROGRAM_STATEMENT: WHILE . LB LOGICAL_EXPN RB LCB BODY RCB

    LB  shift, and go to state 34


State 15

   25 PROGRAM_STATEMENT: DO . LCB BODY RCB WHILE LB LOGICAL_EXPN RB SC

    LCB  shift, and go to state 35


State 16

   12 DATA_TYPE: INT .

    $default  reduce using rule 12 (DATA_TYPE)


State 17

   13 DATA_TYPE: CHAR .

    $default  reduce using rule 13 (DATA_TYPE)


State 18

   14 DATA_TYPE: FLOAT .

    $default  reduce using rule 14 (DATA_TYPE)


State 19

   15 DATA_TYPE: DOUBLE .

    $default  reduce using rule 15 (DATA_TYPE)


State 20

    1 prm: HEADER MAIN_TYPE MAIN LB RB LCB BODY . RCB

    RCB  shift, and go to state 36


State 21

    2 BODY: DECLARATION_STATEMENTS . BODY
    5     | DECLARATION_STATEMENTS .

    LB      shift, and go to state 10
    VAR     shift, and go to state 11
    IF      shift, and go to state 12
    FOR     shift, and go to state 13
    WHILE   shift, and go to state 14
    DO      shift, and go to state 15
    INT     shift, and go to state 16
    CHAR    shift, and go to state 17
    FLOAT   shift, and go to state 18
    DOUBLE  shift, and go to state 19

    $default  reduce using rule 5 (BODY)

    BODY                    go to state 37
    DECLARATION_STATEMENTS  go to state 21
    DECLARATION_STATEMENT   go to state 22
    DATA_TYPE               go to state 23
    PROGRAM_STATEMENTS      go to state 24
    PROGRAM_STATEMENT       go to state 25


State 22

    6 DECLARATION_STATEMENTS: DECLARATION_STATEMENT . DECLARATION_STATEMENTS
    7                       | DECLARATION_STATEMENT .

    INT     shift, and go to state 16
    CHAR    shift, and go to state 17
    FLOAT   shift, and go to state 18
    DOUBLE  shift, and go to state 19

    INT       [reduce using rule 7 (DECLARATION_STATEMENTS)]
    CHAR      [reduce using rule 7 (DECLARATION_STATEMENTS)]
    FLOAT     [reduce using rule 7 (DECLARATION_STATEMENTS)]
    DOUBLE    [reduce using rule 7 (DECLARATION_STATEMENTS)]
    $default  reduce using rule 7 (DECLARATION_STATEMENTS)

    DECLARATION_STATEMENTS  go to state 38
    DECLARATION_STATEMENT   go to state 22
    DATA_TYPE               go to state 23


State 23

    8 DECLARATION_STATEMENT: DATA_TYPE . VAR_LIST SC

    VAR  shift, and go to state 39

    VAR_LIST  go to state 40


State 24

    3 BODY: PROGRAM_STATEMENTS . BODY
    4     | PROGRAM_STATEMENTS .

    LB      shift, and go to state 10
    VAR     shift, and go to state 11
    IF      shift, and go to state 12
    FOR     shift, and go to state 13
    WHILE   shift, and go to state 14
    DO      shift, and go to state 15
    INT     shift, and go to state 16
    CHAR    shift, and go to state 17
    FLOAT   shift, and go to state 18
    DOUBLE  shift, and go to state 19

    $default  reduce using rule 4 (BODY)

    BODY                    go to state 41
    DECLARATION_STATEMENTS  go to state 21
    DECLARATION_STATEMENT   go to state 22
    DATA_TYPE               go to state 23
    PROGRAM_STATEMENTS      go to state 24
    PROGRAM_STATEMENT       go to state 25


State 25

   16 PROGRAM_STATEMENTS: PROGRAM_STATEMENT . PROGRAM_STATEMENTS
   17                   | PROGRAM_STATEMENT .

    LB     shift, and go to state 10
    VAR    shift, and go to state 11
    IF     shift, and go to state 12
    FOR    shift, and go to state 13
    WHILE  shift, and go to state 14
    DO     shift, and go to state 15

    LB        [reduce using rule 17 (PROGRAM_STATEMENTS)]
    VAR       [reduce using rule 17 (PROGRAM_STATEMENTS)]
    IF        [reduce using rule 17 (PROGRAM_STATEMENTS)]
    FOR       [reduce using rule 17 (PROGRAM_STATEMENTS)]
    WHILE     [reduce using rule 17 (PROGRAM_STATEMENTS)]
    DO        [reduce using rule 17 (PROGRAM_STATEMENTS)]
    $default  reduce using rule 17 (PROGRAM_STATEMENTS)

    PROGRAM_STATEMENTS  go to state 42
    PROGRAM_STATEMENT   go to state 25


State 26

   35 LOGICAL_EXPN: LB . LOGICAL_EXPN RB

    LB      shift, and go to state 26
    VAR     shift, and go to state 27
    NOT     shift, and go to state 28
    NUMINT  shift, and go to state 29

    LOGICAL_EXPN  go to state 43


State 27

   37 LOGICAL_EXPN: VAR .

    $default  reduce using rule 37 (LOGICAL_EXPN)


State 28

   34 LOGICAL_EXPN: NOT . LOGICAL_EXPN

    LB      shift, and go to state 26
    VAR     shift, and go to state 27
    NOT     shift, and go to state 28
    NUMINT  shift, and go to state 29

    LOGICAL_EXPN  go to state 44


State 29

   36 LOGICAL_EXPN: NUMINT .

    $default  reduce using rule 36 (LOGICAL_EXPN)


State 30

   21 PROGRAM_STATEMENT: LB LOGICAL_EXPN . RB QUESM LCB BODY RCB COLON LCB BODY RCB
   26 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   27             | LOGICAL_EXPN . AND LOGICAL_EXPN
   28             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   29             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   30             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   31             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   32             | LOGICAL_EXPN . GT LOGICAL_EXPN
   33             | LOGICAL_EXPN . LT LOGICAL_EXPN

    RB          shift, and go to state 45
    EQCOMPARE   shift, and go to state 46
    NEQCOMPARE  shift, and go to state 47
    GTE         shift, and go to state 48
    LTE         shift, and go to state 49
    GT          shift, and go to state 50
    LT          shift, and go to state 51
    AND         shift, and go to state 52
    OR          shift, and go to state 53


State 31

   18 PROGRAM_STATEMENT: VAR EQ . A_EXPN SC

    LB      shift, and go to state 54
    VAR     shift, and go to state 55
    NUMINT  shift, and go to state 56

    A_EXPN  go to state 57


State 32

   19 PROGRAM_STATEMENT: IF LB . LOGICAL_EXPN RB LCB BODY RCB ELSE LCB BODY RCB
   20                  | IF LB . LOGICAL_EXPN RB LCB BODY RCB

    LB      shift, and go to state 26
    VAR     shift, and go to state 27
    NOT     shift, and go to state 28
    NUMINT  shift, and go to state 29

    LOGICAL_EXPN  go to state 58


State 33

   22 PROGRAM_STATEMENT: FOR LB . PROGRAM_STATEMENT LOGICAL_EXPN SC A_EXPN RB LCB BODY RCB
   23                  | FOR LB . A_EXPN SC LOGICAL_EXPN SC A_EXPN RB LCB BODY RCB

    LB      shift, and go to state 59
    VAR     shift, and go to state 60
    IF      shift, and go to state 12
    FOR     shift, and go to state 13
    WHILE   shift, and go to state 14
    DO      shift, and go to state 15
    NUMINT  shift, and go to state 56

    PROGRAM_STATEMENT  go to state 61
    A_EXPN             go to state 62


State 34

   24 PROGRAM_STATEMENT: WHILE LB . LOGICAL_EXPN RB LCB BODY RCB

    LB      shift, and go to state 26
    VAR     shift, and go to state 27
    NOT     shift, and go to state 28
    NUMINT  shift, and go to state 29

    LOGICAL_EXPN  go to state 63


State 35

   25 PROGRAM_STATEMENT: DO LCB . BODY RCB WHILE LB LOGICAL_EXPN RB SC

    LB      shift, and go to state 10
    VAR     shift, and go to state 11
    IF      shift, and go to state 12
    FOR     shift, and go to state 13
    WHILE   shift, and go to state 14
    DO      shift, and go to state 15
    INT     shift, and go to state 16
    CHAR    shift, and go to state 17
    FLOAT   shift, and go to state 18
    DOUBLE  shift, and go to state 19

    BODY                    go to state 64
    DECLARATION_STATEMENTS  go to state 21
    DECLARATION_STATEMENT   go to state 22
    DATA_TYPE               go to state 23
    PROGRAM_STATEMENTS      go to state 24
    PROGRAM_STATEMENT       go to state 25


State 36

    1 prm: HEADER MAIN_TYPE MAIN LB RB LCB BODY RCB .

    $default  reduce using rule 1 (prm)


State 37

    2 BODY: DECLARATION_STATEMENTS BODY .

    $default  reduce using rule 2 (BODY)


State 38

    6 DECLARATION_STATEMENTS: DECLARATION_STATEMENT DECLARATION_STATEMENTS .

    $default  reduce using rule 6 (DECLARATION_STATEMENTS)


State 39

    9 VAR_LIST: VAR . COMA VAR_LIST
   10         | VAR .

    COMA  shift, and go to state 65

    $default  reduce using rule 10 (VAR_LIST)


State 40

    8 DECLARATION_STATEMENT: DATA_TYPE VAR_LIST . SC

    SC  shift, and go to state 66


State 41

    3 BODY: PROGRAM_STATEMENTS BODY .

    $default  reduce using rule 3 (BODY)


State 42

   16 PROGRAM_STATEMENTS: PROGRAM_STATEMENT PROGRAM_STATEMENTS .

    $default  reduce using rule 16 (PROGRAM_STATEMENTS)


State 43

   26 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   27             | LOGICAL_EXPN . AND LOGICAL_EXPN
   28             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   29             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   30             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   31             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   32             | LOGICAL_EXPN . GT LOGICAL_EXPN
   33             | LOGICAL_EXPN . LT LOGICAL_EXPN
   35             | LB LOGICAL_EXPN . RB

    RB          shift, and go to state 67
    EQCOMPARE   shift, and go to state 46
    NEQCOMPARE  shift, and go to state 47
    GTE         shift, and go to state 48
    LTE         shift, and go to state 49
    GT          shift, and go to state 50
    LT          shift, and go to state 51
    AND         shift, and go to state 52
    OR          shift, and go to state 53


State 44

   26 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   27             | LOGICAL_EXPN . AND LOGICAL_EXPN
   28             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   29             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   30             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   31             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   32             | LOGICAL_EXPN . GT LOGICAL_EXPN
   33             | LOGICAL_EXPN . LT LOGICAL_EXPN
   34             | NOT LOGICAL_EXPN .

    $default  reduce using rule 34 (LOGICAL_EXPN)


State 45

   21 PROGRAM_STATEMENT: LB LOGICAL_EXPN RB . QUESM LCB BODY RCB COLON LCB BODY RCB

    QUESM  shift, and go to state 68


State 46

   28 LOGICAL_EXPN: LOGICAL_EXPN EQCOMPARE . LOGICAL_EXPN

    LB      shift, and go to state 26
    VAR     shift, and go to state 27
    NOT     shift, and go to state 28
    NUMINT  shift, and go to state 29

    LOGICAL_EXPN  go to state 69


State 47

   29 LOGICAL_EXPN: LOGICAL_EXPN NEQCOMPARE . LOGICAL_EXPN

    LB      shift, and go to state 26
    VAR     shift, and go to state 27
    NOT     shift, and go to state 28
    NUMINT  shift, and go to state 29

    LOGICAL_EXPN  go to state 70


State 48

   30 LOGICAL_EXPN: LOGICAL_EXPN GTE . LOGICAL_EXPN

    LB      shift, and go to state 26
    VAR     shift, and go to state 27
    NOT     shift, and go to state 28
    NUMINT  shift, and go to state 29

    LOGICAL_EXPN  go to state 71


State 49

   31 LOGICAL_EXPN: LOGICAL_EXPN LTE . LOGICAL_EXPN

    LB      shift, and go to state 26
    VAR     shift, and go to state 27
    NOT     shift, and go to state 28
    NUMINT  shift, and go to state 29

    LOGICAL_EXPN  go to state 72


State 50

   32 LOGICAL_EXPN: LOGICAL_EXPN GT . LOGICAL_EXPN

    LB      shift, and go to state 26
    VAR     shift, and go to state 27
    NOT     shift, and go to state 28
    NUMINT  shift, and go to state 29

    LOGICAL_EXPN  go to state 73


State 51

   33 LOGICAL_EXPN: LOGICAL_EXPN LT . LOGICAL_EXPN

    LB      shift, and go to state 26
    VAR     shift, and go to state 27
    NOT     shift, and go to state 28
    NUMINT  shift, and go to state 29

    LOGICAL_EXPN  go to state 74


State 52

   27 LOGICAL_EXPN: LOGICAL_EXPN AND . LOGICAL_EXPN

    LB      shift, and go to state 26
    VAR     shift, and go to state 27
    NOT     shift, and go to state 28
    NUMINT  shift, and go to state 29

    LOGICAL_EXPN  go to state 75


State 53

   26 LOGICAL_EXPN: LOGICAL_EXPN OR . LOGICAL_EXPN

    LB      shift, and go to state 26
    VAR     shift, and go to state 27
    NOT     shift, and go to state 28
    NUMINT  shift, and go to state 29

    LOGICAL_EXPN  go to state 76


State 54

   46 A_EXPN: LB . A_EXPN RB

    LB      shift, and go to state 54
    VAR     shift, and go to state 55
    NUMINT  shift, and go to state 56

    A_EXPN  go to state 77


State 55

   48 A_EXPN: VAR .

    $default  reduce using rule 48 (A_EXPN)


State 56

   47 A_EXPN: NUMINT .

    $default  reduce using rule 47 (A_EXPN)


State 57

   18 PROGRAM_STATEMENT: VAR EQ A_EXPN . SC
   38 A_EXPN: A_EXPN . PLUS A_EXPN
   39       | A_EXPN . MINUS A_EXPN
   40       | A_EXPN . MUL A_EXPN
   41       | A_EXPN . DIV A_EXPN
   42       | A_EXPN . MOD A_EXPN
   43       | A_EXPN . EXP A_EXPN
   44       | A_EXPN . UMINUS
   45       | A_EXPN . UPLUS

    SC      shift, and go to state 78
    PLUS    shift, and go to state 79
    MINUS   shift, and go to state 80
    MUL     shift, and go to state 81
    DIV     shift, and go to state 82
    MOD     shift, and go to state 83
    EXP     shift, and go to state 84
    UPLUS   shift, and go to state 85
    UMINUS  shift, and go to state 86


State 58

   19 PROGRAM_STATEMENT: IF LB LOGICAL_EXPN . RB LCB BODY RCB ELSE LCB BODY RCB
   20                  | IF LB LOGICAL_EXPN . RB LCB BODY RCB
   26 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   27             | LOGICAL_EXPN . AND LOGICAL_EXPN
   28             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   29             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   30             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   31             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   32             | LOGICAL_EXPN . GT LOGICAL_EXPN
   33             | LOGICAL_EXPN . LT LOGICAL_EXPN

    RB          shift, and go to state 87
    EQCOMPARE   shift, and go to state 46
    NEQCOMPARE  shift, and go to state 47
    GTE         shift, and go to state 48
    LTE         shift, and go to state 49
    GT          shift, and go to state 50
    LT          shift, and go to state 51
    AND         shift, and go to state 52
    OR          shift, and go to state 53


State 59

   21 PROGRAM_STATEMENT: LB . LOGICAL_EXPN RB QUESM LCB BODY RCB COLON LCB BODY RCB
   46 A_EXPN: LB . A_EXPN RB

    LB      shift, and go to state 88
    VAR     shift, and go to state 89
    NOT     shift, and go to state 28
    NUMINT  shift, and go to state 90

    LOGICAL_EXPN  go to state 30
    A_EXPN        go to state 77


State 60

   18 PROGRAM_STATEMENT: VAR . EQ A_EXPN SC
   48 A_EXPN: VAR .

    EQ  shift, and go to state 31

    $default  reduce using rule 48 (A_EXPN)


State 61

   22 PROGRAM_STATEMENT: FOR LB PROGRAM_STATEMENT . LOGICAL_EXPN SC A_EXPN RB LCB BODY RCB

    LB      shift, and go to state 26
    VAR     shift, and go to state 27
    NOT     shift, and go to state 28
    NUMINT  shift, and go to state 29

    LOGICAL_EXPN  go to state 91


State 62

   23 PROGRAM_STATEMENT: FOR LB A_EXPN . SC LOGICAL_EXPN SC A_EXPN RB LCB BODY RCB
   38 A_EXPN: A_EXPN . PLUS A_EXPN
   39       | A_EXPN . MINUS A_EXPN
   40       | A_EXPN . MUL A_EXPN
   41       | A_EXPN . DIV A_EXPN
   42       | A_EXPN . MOD A_EXPN
   43       | A_EXPN . EXP A_EXPN
   44       | A_EXPN . UMINUS
   45       | A_EXPN . UPLUS

    SC      shift, and go to state 92
    PLUS    shift, and go to state 79
    MINUS   shift, and go to state 80
    MUL     shift, and go to state 81
    DIV     shift, and go to state 82
    MOD     shift, and go to state 83
    EXP     shift, and go to state 84
    UPLUS   shift, and go to state 85
    UMINUS  shift, and go to state 86


State 63

   24 PROGRAM_STATEMENT: WHILE LB LOGICAL_EXPN . RB LCB BODY RCB
   26 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   27             | LOGICAL_EXPN . AND LOGICAL_EXPN
   28             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   29             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   30             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   31             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   32             | LOGICAL_EXPN . GT LOGICAL_EXPN
   33             | LOGICAL_EXPN . LT LOGICAL_EXPN

    RB          shift, and go to state 93
    EQCOMPARE   shift, and go to state 46
    NEQCOMPARE  shift, and go to state 47
    GTE         shift, and go to state 48
    LTE         shift, and go to state 49
    GT          shift, and go to state 50
    LT          shift, and go to state 51
    AND         shift, and go to state 52
    OR          shift, and go to state 53


State 64

   25 PROGRAM_STATEMENT: DO LCB BODY . RCB WHILE LB LOGICAL_EXPN RB SC

    RCB  shift, and go to state 94


State 65

    9 VAR_LIST: VAR COMA . VAR_LIST

    VAR  shift, and go to state 39

    VAR_LIST  go to state 95


State 66

    8 DECLARATION_STATEMENT: DATA_TYPE VAR_LIST SC .

    $default  reduce using rule 8 (DECLARATION_STATEMENT)


State 67

   35 LOGICAL_EXPN: LB LOGICAL_EXPN RB .

    $default  reduce using rule 35 (LOGICAL_EXPN)


State 68

   21 PROGRAM_STATEMENT: LB LOGICAL_EXPN RB QUESM . LCB BODY RCB COLON LCB BODY RCB

    LCB  shift, and go to state 96


State 69

   26 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   27             | LOGICAL_EXPN . AND LOGICAL_EXPN
   28             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   28             | LOGICAL_EXPN EQCOMPARE LOGICAL_EXPN .
   29             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   30             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   31             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   32             | LOGICAL_EXPN . GT LOGICAL_EXPN
   33             | LOGICAL_EXPN . LT LOGICAL_EXPN

    GTE  shift, and go to state 48
    LTE  shift, and go to state 49
    GT   shift, and go to state 50
    LT   shift, and go to state 51

    $default  reduce using rule 28 (LOGICAL_EXPN)


State 70

   26 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   27             | LOGICAL_EXPN . AND LOGICAL_EXPN
   28             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   29             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   29             | LOGICAL_EXPN NEQCOMPARE LOGICAL_EXPN .
   30             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   31             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   32             | LOGICAL_EXPN . GT LOGICAL_EXPN
   33             | LOGICAL_EXPN . LT LOGICAL_EXPN

    GTE  shift, and go to state 48
    LTE  shift, and go to state 49
    GT   shift, and go to state 50
    LT   shift, and go to state 51

    $default  reduce using rule 29 (LOGICAL_EXPN)


State 71

   26 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   27             | LOGICAL_EXPN . AND LOGICAL_EXPN
   28             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   29             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   30             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   30             | LOGICAL_EXPN GTE LOGICAL_EXPN .
   31             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   32             | LOGICAL_EXPN . GT LOGICAL_EXPN
   33             | LOGICAL_EXPN . LT LOGICAL_EXPN

    $default  reduce using rule 30 (LOGICAL_EXPN)


State 72

   26 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   27             | LOGICAL_EXPN . AND LOGICAL_EXPN
   28             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   29             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   30             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   31             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   31             | LOGICAL_EXPN LTE LOGICAL_EXPN .
   32             | LOGICAL_EXPN . GT LOGICAL_EXPN
   33             | LOGICAL_EXPN . LT LOGICAL_EXPN

    $default  reduce using rule 31 (LOGICAL_EXPN)


State 73

   26 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   27             | LOGICAL_EXPN . AND LOGICAL_EXPN
   28             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   29             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   30             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   31             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   32             | LOGICAL_EXPN . GT LOGICAL_EXPN
   32             | LOGICAL_EXPN GT LOGICAL_EXPN .
   33             | LOGICAL_EXPN . LT LOGICAL_EXPN

    $default  reduce using rule 32 (LOGICAL_EXPN)


State 74

   26 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   27             | LOGICAL_EXPN . AND LOGICAL_EXPN
   28             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   29             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   30             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   31             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   32             | LOGICAL_EXPN . GT LOGICAL_EXPN
   33             | LOGICAL_EXPN . LT LOGICAL_EXPN
   33             | LOGICAL_EXPN LT LOGICAL_EXPN .

    $default  reduce using rule 33 (LOGICAL_EXPN)


State 75

   26 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   27             | LOGICAL_EXPN . AND LOGICAL_EXPN
   27             | LOGICAL_EXPN AND LOGICAL_EXPN .
   28             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   29             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   30             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   31             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   32             | LOGICAL_EXPN . GT LOGICAL_EXPN
   33             | LOGICAL_EXPN . LT LOGICAL_EXPN

    EQCOMPARE   shift, and go to state 46
    NEQCOMPARE  shift, and go to state 47
    GTE         shift, and go to state 48
    LTE         shift, and go to state 49
    GT          shift, and go to state 50
    LT          shift, and go to state 51

    $default  reduce using rule 27 (LOGICAL_EXPN)


State 76

   26 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   26             | LOGICAL_EXPN OR LOGICAL_EXPN .
   27             | LOGICAL_EXPN . AND LOGICAL_EXPN
   28             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   29             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   30             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   31             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   32             | LOGICAL_EXPN . GT LOGICAL_EXPN
   33             | LOGICAL_EXPN . LT LOGICAL_EXPN

    EQCOMPARE   shift, and go to state 46
    NEQCOMPARE  shift, and go to state 47
    GTE         shift, and go to state 48
    LTE         shift, and go to state 49
    GT          shift, and go to state 50
    LT          shift, and go to state 51

    $default  reduce using rule 26 (LOGICAL_EXPN)


State 77

   38 A_EXPN: A_EXPN . PLUS A_EXPN
   39       | A_EXPN . MINUS A_EXPN
   40       | A_EXPN . MUL A_EXPN
   41       | A_EXPN . DIV A_EXPN
   42       | A_EXPN . MOD A_EXPN
   43       | A_EXPN . EXP A_EXPN
   44       | A_EXPN . UMINUS
   45       | A_EXPN . UPLUS
   46       | LB A_EXPN . RB

    RB      shift, and go to state 97
    PLUS    shift, and go to state 79
    MINUS   shift, and go to state 80
    MUL     shift, and go to state 81
    DIV     shift, and go to state 82
    MOD     shift, and go to state 83
    EXP     shift, and go to state 84
    UPLUS   shift, and go to state 85
    UMINUS  shift, and go to state 86


State 78

   18 PROGRAM_STATEMENT: VAR EQ A_EXPN SC .

    $default  reduce using rule 18 (PROGRAM_STATEMENT)


State 79

   38 A_EXPN: A_EXPN PLUS . A_EXPN

    LB      shift, and go to state 54
    VAR     shift, and go to state 55
    NUMINT  shift, and go to state 56

    A_EXPN  go to state 98


State 80

   39 A_EXPN: A_EXPN MINUS . A_EXPN

    LB      shift, and go to state 54
    VAR     shift, and go to state 55
    NUMINT  shift, and go to state 56

    A_EXPN  go to state 99


State 81

   40 A_EXPN: A_EXPN MUL . A_EXPN

    LB      shift, and go to state 54
    VAR     shift, and go to state 55
    NUMINT  shift, and go to state 56

    A_EXPN  go to state 100


State 82

   41 A_EXPN: A_EXPN DIV . A_EXPN

    LB      shift, and go to state 54
    VAR     shift, and go to state 55
    NUMINT  shift, and go to state 56

    A_EXPN  go to state 101


State 83

   42 A_EXPN: A_EXPN MOD . A_EXPN

    LB      shift, and go to state 54
    VAR     shift, and go to state 55
    NUMINT  shift, and go to state 56

    A_EXPN  go to state 102


State 84

   43 A_EXPN: A_EXPN EXP . A_EXPN

    LB      shift, and go to state 54
    VAR     shift, and go to state 55
    NUMINT  shift, and go to state 56

    A_EXPN  go to state 103


State 85

   45 A_EXPN: A_EXPN UPLUS .

    $default  reduce using rule 45 (A_EXPN)


State 86

   44 A_EXPN: A_EXPN UMINUS .

    $default  reduce using rule 44 (A_EXPN)


State 87

   19 PROGRAM_STATEMENT: IF LB LOGICAL_EXPN RB . LCB BODY RCB ELSE LCB BODY RCB
   20                  | IF LB LOGICAL_EXPN RB . LCB BODY RCB

    LCB  shift, and go to state 104


State 88

   35 LOGICAL_EXPN: LB . LOGICAL_EXPN RB
   46 A_EXPN: LB . A_EXPN RB

    LB      shift, and go to state 88
    VAR     shift, and go to state 89
    NOT     shift, and go to state 28
    NUMINT  shift, and go to state 90

    LOGICAL_EXPN  go to state 43
    A_EXPN        go to state 77


State 89

   37 LOGICAL_EXPN: VAR .
   48 A_EXPN: VAR .

    RB        reduce using rule 37 (LOGICAL_EXPN)
    RB        [reduce using rule 48 (A_EXPN)]
    PLUS      reduce using rule 48 (A_EXPN)
    MINUS     reduce using rule 48 (A_EXPN)
    MUL       reduce using rule 48 (A_EXPN)
    DIV       reduce using rule 48 (A_EXPN)
    MOD       reduce using rule 48 (A_EXPN)
    EXP       reduce using rule 48 (A_EXPN)
    UPLUS     reduce using rule 48 (A_EXPN)
    UMINUS    reduce using rule 48 (A_EXPN)
    $default  reduce using rule 37 (LOGICAL_EXPN)


State 90

   36 LOGICAL_EXPN: NUMINT .
   47 A_EXPN: NUMINT .

    RB        reduce using rule 36 (LOGICAL_EXPN)
    RB        [reduce using rule 47 (A_EXPN)]
    PLUS      reduce using rule 47 (A_EXPN)
    MINUS     reduce using rule 47 (A_EXPN)
    MUL       reduce using rule 47 (A_EXPN)
    DIV       reduce using rule 47 (A_EXPN)
    MOD       reduce using rule 47 (A_EXPN)
    EXP       reduce using rule 47 (A_EXPN)
    UPLUS     reduce using rule 47 (A_EXPN)
    UMINUS    reduce using rule 47 (A_EXPN)
    $default  reduce using rule 36 (LOGICAL_EXPN)


State 91

   22 PROGRAM_STATEMENT: FOR LB PROGRAM_STATEMENT LOGICAL_EXPN . SC A_EXPN RB LCB BODY RCB
   26 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   27             | LOGICAL_EXPN . AND LOGICAL_EXPN
   28             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   29             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   30             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   31             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   32             | LOGICAL_EXPN . GT LOGICAL_EXPN
   33             | LOGICAL_EXPN . LT LOGICAL_EXPN

    SC          shift, and go to state 105
    EQCOMPARE   shift, and go to state 46
    NEQCOMPARE  shift, and go to state 47
    GTE         shift, and go to state 48
    LTE         shift, and go to state 49
    GT          shift, and go to state 50
    LT          shift, and go to state 51
    AND         shift, and go to state 52
    OR          shift, and go to state 53


State 92

   23 PROGRAM_STATEMENT: FOR LB A_EXPN SC . LOGICAL_EXPN SC A_EXPN RB LCB BODY RCB

    LB      shift, and go to state 26
    VAR     shift, and go to state 27
    NOT     shift, and go to state 28
    NUMINT  shift, and go to state 29

    LOGICAL_EXPN  go to state 106


State 93

   24 PROGRAM_STATEMENT: WHILE LB LOGICAL_EXPN RB . LCB BODY RCB

    LCB  shift, and go to state 107


State 94

   25 PROGRAM_STATEMENT: DO LCB BODY RCB . WHILE LB LOGICAL_EXPN RB SC

    WHILE  shift, and go to state 108


State 95

    9 VAR_LIST: VAR COMA VAR_LIST .

    $default  reduce using rule 9 (VAR_LIST)


State 96

   21 PROGRAM_STATEMENT: LB LOGICAL_EXPN RB QUESM LCB . BODY RCB COLON LCB BODY RCB

    LB      shift, and go to state 10
    VAR     shift, and go to state 11
    IF      shift, and go to state 12
    FOR     shift, and go to state 13
    WHILE   shift, and go to state 14
    DO      shift, and go to state 15
    INT     shift, and go to state 16
    CHAR    shift, and go to state 17
    FLOAT   shift, and go to state 18
    DOUBLE  shift, and go to state 19

    BODY                    go to state 109
    DECLARATION_STATEMENTS  go to state 21
    DECLARATION_STATEMENT   go to state 22
    DATA_TYPE               go to state 23
    PROGRAM_STATEMENTS      go to state 24
    PROGRAM_STATEMENT       go to state 25


State 97

   46 A_EXPN: LB A_EXPN RB .

    $default  reduce using rule 46 (A_EXPN)


State 98

   38 A_EXPN: A_EXPN . PLUS A_EXPN
   38       | A_EXPN PLUS A_EXPN .
   39       | A_EXPN . MINUS A_EXPN
   40       | A_EXPN . MUL A_EXPN
   41       | A_EXPN . DIV A_EXPN
   42       | A_EXPN . MOD A_EXPN
   43       | A_EXPN . EXP A_EXPN
   44       | A_EXPN . UMINUS
   45       | A_EXPN . UPLUS

    MUL  shift, and go to state 81
    DIV  shift, and go to state 82
    MOD  shift, and go to state 83

    $default  reduce using rule 38 (A_EXPN)


State 99

   38 A_EXPN: A_EXPN . PLUS A_EXPN
   39       | A_EXPN . MINUS A_EXPN
   39       | A_EXPN MINUS A_EXPN .
   40       | A_EXPN . MUL A_EXPN
   41       | A_EXPN . DIV A_EXPN
   42       | A_EXPN . MOD A_EXPN
   43       | A_EXPN . EXP A_EXPN
   44       | A_EXPN . UMINUS
   45       | A_EXPN . UPLUS

    MUL  shift, and go to state 81
    DIV  shift, and go to state 82
    MOD  shift, and go to state 83

    $default  reduce using rule 39 (A_EXPN)


State 100

   38 A_EXPN: A_EXPN . PLUS A_EXPN
   39       | A_EXPN . MINUS A_EXPN
   40       | A_EXPN . MUL A_EXPN
   40       | A_EXPN MUL A_EXPN .
   41       | A_EXPN . DIV A_EXPN
   42       | A_EXPN . MOD A_EXPN
   43       | A_EXPN . EXP A_EXPN
   44       | A_EXPN . UMINUS
   45       | A_EXPN . UPLUS

    $default  reduce using rule 40 (A_EXPN)


State 101

   38 A_EXPN: A_EXPN . PLUS A_EXPN
   39       | A_EXPN . MINUS A_EXPN
   40       | A_EXPN . MUL A_EXPN
   41       | A_EXPN . DIV A_EXPN
   41       | A_EXPN DIV A_EXPN .
   42       | A_EXPN . MOD A_EXPN
   43       | A_EXPN . EXP A_EXPN
   44       | A_EXPN . UMINUS
   45       | A_EXPN . UPLUS

    $default  reduce using rule 41 (A_EXPN)


State 102

   38 A_EXPN: A_EXPN . PLUS A_EXPN
   39       | A_EXPN . MINUS A_EXPN
   40       | A_EXPN . MUL A_EXPN
   41       | A_EXPN . DIV A_EXPN
   42       | A_EXPN . MOD A_EXPN
   42       | A_EXPN MOD A_EXPN .
   43       | A_EXPN . EXP A_EXPN
   44       | A_EXPN . UMINUS
   45       | A_EXPN . UPLUS

    $default  reduce using rule 42 (A_EXPN)


State 103

   38 A_EXPN: A_EXPN . PLUS A_EXPN
   39       | A_EXPN . MINUS A_EXPN
   40       | A_EXPN . MUL A_EXPN
   41       | A_EXPN . DIV A_EXPN
   42       | A_EXPN . MOD A_EXPN
   43       | A_EXPN . EXP A_EXPN
   43       | A_EXPN EXP A_EXPN .
   44       | A_EXPN . UMINUS
   45       | A_EXPN . UPLUS

    PLUS   shift, and go to state 79
    MINUS  shift, and go to state 80
    MUL    shift, and go to state 81
    DIV    shift, and go to state 82
    MOD    shift, and go to state 83
    EXP    shift, and go to state 84

    $default  reduce using rule 43 (A_EXPN)


State 104

   19 PROGRAM_STATEMENT: IF LB LOGICAL_EXPN RB LCB . BODY RCB ELSE LCB BODY RCB
   20                  | IF LB LOGICAL_EXPN RB LCB . BODY RCB

    LB      shift, and go to state 10
    VAR     shift, and go to state 11
    IF      shift, and go to state 12
    FOR     shift, and go to state 13
    WHILE   shift, and go to state 14
    DO      shift, and go to state 15
    INT     shift, and go to state 16
    CHAR    shift, and go to state 17
    FLOAT   shift, and go to state 18
    DOUBLE  shift, and go to state 19

    BODY                    go to state 110
    DECLARATION_STATEMENTS  go to state 21
    DECLARATION_STATEMENT   go to state 22
    DATA_TYPE               go to state 23
    PROGRAM_STATEMENTS      go to state 24
    PROGRAM_STATEMENT       go to state 25


State 105

   22 PROGRAM_STATEMENT: FOR LB PROGRAM_STATEMENT LOGICAL_EXPN SC . A_EXPN RB LCB BODY RCB

    LB      shift, and go to state 54
    VAR     shift, and go to state 55
    NUMINT  shift, and go to state 56

    A_EXPN  go to state 111


State 106

   23 PROGRAM_STATEMENT: FOR LB A_EXPN SC LOGICAL_EXPN . SC A_EXPN RB LCB BODY RCB
   26 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   27             | LOGICAL_EXPN . AND LOGICAL_EXPN
   28             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   29             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   30             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   31             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   32             | LOGICAL_EXPN . GT LOGICAL_EXPN
   33             | LOGICAL_EXPN . LT LOGICAL_EXPN

    SC          shift, and go to state 112
    EQCOMPARE   shift, and go to state 46
    NEQCOMPARE  shift, and go to state 47
    GTE         shift, and go to state 48
    LTE         shift, and go to state 49
    GT          shift, and go to state 50
    LT          shift, and go to state 51
    AND         shift, and go to state 52
    OR          shift, and go to state 53


State 107

   24 PROGRAM_STATEMENT: WHILE LB LOGICAL_EXPN RB LCB . BODY RCB

    LB      shift, and go to state 10
    VAR     shift, and go to state 11
    IF      shift, and go to state 12
    FOR     shift, and go to state 13
    WHILE   shift, and go to state 14
    DO      shift, and go to state 15
    INT     shift, and go to state 16
    CHAR    shift, and go to state 17
    FLOAT   shift, and go to state 18
    DOUBLE  shift, and go to state 19

    BODY                    go to state 113
    DECLARATION_STATEMENTS  go to state 21
    DECLARATION_STATEMENT   go to state 22
    DATA_TYPE               go to state 23
    PROGRAM_STATEMENTS      go to state 24
    PROGRAM_STATEMENT       go to state 25


State 108

   25 PROGRAM_STATEMENT: DO LCB BODY RCB WHILE . LB LOGICAL_EXPN RB SC

    LB  shift, and go to state 114


State 109

   21 PROGRAM_STATEMENT: LB LOGICAL_EXPN RB QUESM LCB BODY . RCB COLON LCB BODY RCB

    RCB  shift, and go to state 115


State 110

   19 PROGRAM_STATEMENT: IF LB LOGICAL_EXPN RB LCB BODY . RCB ELSE LCB BODY RCB
   20                  | IF LB LOGICAL_EXPN RB LCB BODY . RCB

    RCB  shift, and go to state 116


State 111

   22 PROGRAM_STATEMENT: FOR LB PROGRAM_STATEMENT LOGICAL_EXPN SC A_EXPN . RB LCB BODY RCB
   38 A_EXPN: A_EXPN . PLUS A_EXPN
   39       | A_EXPN . MINUS A_EXPN
   40       | A_EXPN . MUL A_EXPN
   41       | A_EXPN . DIV A_EXPN
   42       | A_EXPN . MOD A_EXPN
   43       | A_EXPN . EXP A_EXPN
   44       | A_EXPN . UMINUS
   45       | A_EXPN . UPLUS

    RB      shift, and go to state 117
    PLUS    shift, and go to state 79
    MINUS   shift, and go to state 80
    MUL     shift, and go to state 81
    DIV     shift, and go to state 82
    MOD     shift, and go to state 83
    EXP     shift, and go to state 84
    UPLUS   shift, and go to state 85
    UMINUS  shift, and go to state 86


State 112

   23 PROGRAM_STATEMENT: FOR LB A_EXPN SC LOGICAL_EXPN SC . A_EXPN RB LCB BODY RCB

    LB      shift, and go to state 54
    VAR     shift, and go to state 55
    NUMINT  shift, and go to state 56

    A_EXPN  go to state 118


State 113

   24 PROGRAM_STATEMENT: WHILE LB LOGICAL_EXPN RB LCB BODY . RCB

    RCB  shift, and go to state 119


State 114

   25 PROGRAM_STATEMENT: DO LCB BODY RCB WHILE LB . LOGICAL_EXPN RB SC

    LB      shift, and go to state 26
    VAR     shift, and go to state 27
    NOT     shift, and go to state 28
    NUMINT  shift, and go to state 29

    LOGICAL_EXPN  go to state 120


State 115

   21 PROGRAM_STATEMENT: LB LOGICAL_EXPN RB QUESM LCB BODY RCB . COLON LCB BODY RCB

    COLON  shift, and go to state 121


State 116

   19 PROGRAM_STATEMENT: IF LB LOGICAL_EXPN RB LCB BODY RCB . ELSE LCB BODY RCB
   20                  | IF LB LOGICAL_EXPN RB LCB BODY RCB .

    ELSE  shift, and go to state 122

    $default  reduce using rule 20 (PROGRAM_STATEMENT)


State 117

   22 PROGRAM_STATEMENT: FOR LB PROGRAM_STATEMENT LOGICAL_EXPN SC A_EXPN RB . LCB BODY RCB

    LCB  shift, and go to state 123


State 118

   23 PROGRAM_STATEMENT: FOR LB A_EXPN SC LOGICAL_EXPN SC A_EXPN . RB LCB BODY RCB
   38 A_EXPN: A_EXPN . PLUS A_EXPN
   39       | A_EXPN . MINUS A_EXPN
   40       | A_EXPN . MUL A_EXPN
   41       | A_EXPN . DIV A_EXPN
   42       | A_EXPN . MOD A_EXPN
   43       | A_EXPN . EXP A_EXPN
   44       | A_EXPN . UMINUS
   45       | A_EXPN . UPLUS

    RB      shift, and go to state 124
    PLUS    shift, and go to state 79
    MINUS   shift, and go to state 80
    MUL     shift, and go to state 81
    DIV     shift, and go to state 82
    MOD     shift, and go to state 83
    EXP     shift, and go to state 84
    UPLUS   shift, and go to state 85
    UMINUS  shift, and go to state 86


State 119

   24 PROGRAM_STATEMENT: WHILE LB LOGICAL_EXPN RB LCB BODY RCB .

    $default  reduce using rule 24 (PROGRAM_STATEMENT)


State 120

   25 PROGRAM_STATEMENT: DO LCB BODY RCB WHILE LB LOGICAL_EXPN . RB SC
   26 LOGICAL_EXPN: LOGICAL_EXPN . OR LOGICAL_EXPN
   27             | LOGICAL_EXPN . AND LOGICAL_EXPN
   28             | LOGICAL_EXPN . EQCOMPARE LOGICAL_EXPN
   29             | LOGICAL_EXPN . NEQCOMPARE LOGICAL_EXPN
   30             | LOGICAL_EXPN . GTE LOGICAL_EXPN
   31             | LOGICAL_EXPN . LTE LOGICAL_EXPN
   32             | LOGICAL_EXPN . GT LOGICAL_EXPN
   33             | LOGICAL_EXPN . LT LOGICAL_EXPN

    RB          shift, and go to state 125
    EQCOMPARE   shift, and go to state 46
    NEQCOMPARE  shift, and go to state 47
    GTE         shift, and go to state 48
    LTE         shift, and go to state 49
    GT          shift, and go to state 50
    LT          shift, and go to state 51
    AND         shift, and go to state 52
    OR          shift, and go to state 53


State 121

   21 PROGRAM_STATEMENT: LB LOGICAL_EXPN RB QUESM LCB BODY RCB COLON . LCB BODY RCB

    LCB  shift, and go to state 126


State 122

   19 PROGRAM_STATEMENT: IF LB LOGICAL_EXPN RB LCB BODY RCB ELSE . LCB BODY RCB

    LCB  shift, and go to state 127


State 123

   22 PROGRAM_STATEMENT: FOR LB PROGRAM_STATEMENT LOGICAL_EXPN SC A_EXPN RB LCB . BODY RCB

    LB      shift, and go to state 10
    VAR     shift, and go to state 11
    IF      shift, and go to state 12
    FOR     shift, and go to state 13
    WHILE   shift, and go to state 14
    DO      shift, and go to state 15
    INT     shift, and go to state 16
    CHAR    shift, and go to state 17
    FLOAT   shift, and go to state 18
    DOUBLE  shift, and go to state 19

    BODY                    go to state 128
    DECLARATION_STATEMENTS  go to state 21
    DECLARATION_STATEMENT   go to state 22
    DATA_TYPE               go to state 23
    PROGRAM_STATEMENTS      go to state 24
    PROGRAM_STATEMENT       go to state 25


State 124

   23 PROGRAM_STATEMENT: FOR LB A_EXPN SC LOGICAL_EXPN SC A_EXPN RB . LCB BODY RCB

    LCB  shift, and go to state 129


State 125

   25 PROGRAM_STATEMENT: DO LCB BODY RCB WHILE LB LOGICAL_EXPN RB . SC

    SC  shift, and go to state 130


State 126

   21 PROGRAM_STATEMENT: LB LOGICAL_EXPN RB QUESM LCB BODY RCB COLON LCB . BODY RCB

    LB      shift, and go to state 10
    VAR     shift, and go to state 11
    IF      shift, and go to state 12
    FOR     shift, and go to state 13
    WHILE   shift, and go to state 14
    DO      shift, and go to state 15
    INT     shift, and go to state 16
    CHAR    shift, and go to state 17
    FLOAT   shift, and go to state 18
    DOUBLE  shift, and go to state 19

    BODY                    go to state 131
    DECLARATION_STATEMENTS  go to state 21
    DECLARATION_STATEMENT   go to state 22
    DATA_TYPE               go to state 23
    PROGRAM_STATEMENTS      go to state 24
    PROGRAM_STATEMENT       go to state 25


State 127

   19 PROGRAM_STATEMENT: IF LB LOGICAL_EXPN RB LCB BODY RCB ELSE LCB . BODY RCB

    LB      shift, and go to state 10
    VAR     shift, and go to state 11
    IF      shift, and go to state 12
    FOR     shift, and go to state 13
    WHILE   shift, and go to state 14
    DO      shift, and go to state 15
    INT     shift, and go to state 16
    CHAR    shift, and go to state 17
    FLOAT   shift, and go to state 18
    DOUBLE  shift, and go to state 19

    BODY                    go to state 132
    DECLARATION_STATEMENTS  go to state 21
    DECLARATION_STATEMENT   go to state 22
    DATA_TYPE               go to state 23
    PROGRAM_STATEMENTS      go to state 24
    PROGRAM_STATEMENT       go to state 25


State 128

   22 PROGRAM_STATEMENT: FOR LB PROGRAM_STATEMENT LOGICAL_EXPN SC A_EXPN RB LCB BODY . RCB

    RCB  shift, and go to state 133


State 129

   23 PROGRAM_STATEMENT: FOR LB A_EXPN SC LOGICAL_EXPN SC A_EXPN RB LCB . BODY RCB

    LB      shift, and go to state 10
    VAR     shift, and go to state 11
    IF      shift, and go to state 12
    FOR     shift, and go to state 13
    WHILE   shift, and go to state 14
    DO      shift, and go to state 15
    INT     shift, and go to state 16
    CHAR    shift, and go to state 17
    FLOAT   shift, and go to state 18
    DOUBLE  shift, and go to state 19

    BODY                    go to state 134
    DECLARATION_STATEMENTS  go to state 21
    DECLARATION_STATEMENT   go to state 22
    DATA_TYPE               go to state 23
    PROGRAM_STATEMENTS      go to state 24
    PROGRAM_STATEMENT       go to state 25


State 130

   25 PROGRAM_STATEMENT: DO LCB BODY RCB WHILE LB LOGICAL_EXPN RB SC .

    $default  reduce using rule 25 (PROGRAM_STATEMENT)


State 131

   21 PROGRAM_STATEMENT: LB LOGICAL_EXPN RB QUESM LCB BODY RCB COLON LCB BODY . RCB

    RCB  shift, and go to state 135


State 132

   19 PROGRAM_STATEMENT: IF LB LOGICAL_EXPN RB LCB BODY RCB ELSE LCB BODY . RCB

    RCB  shift, and go to state 136


State 133

   22 PROGRAM_STATEMENT: FOR LB PROGRAM_STATEMENT LOGICAL_EXPN SC A_EXPN RB LCB BODY RCB .

    $default  reduce using rule 22 (PROGRAM_STATEMENT)


State 134

   23 PROGRAM_STATEMENT: FOR LB A_EXPN SC LOGICAL_EXPN SC A_EXPN RB LCB BODY . RCB

    RCB  shift, and go to state 137


State 135

   21 PROGRAM_STATEMENT: LB LOGICAL_EXPN RB QUESM LCB BODY RCB COLON LCB BODY RCB .

    $default  reduce using rule 21 (PROGRAM_STATEMENT)


State 136

   19 PROGRAM_STATEMENT: IF LB LOGICAL_EXPN RB LCB BODY RCB ELSE LCB BODY RCB .

    $default  reduce using rule 19 (PROGRAM_STATEMENT)


State 137

   23 PROGRAM_STATEMENT: FOR LB A_EXPN SC LOGICAL_EXPN SC A_EXPN RB LCB BODY RCB .

    $default  reduce using rule 23 (PROGRAM_STATEMENT)
