State 32 conflicts: 1 shift/reduce


Grammar

    0 $accept: prm $end

    1 prm: HEADER INT MAIN LB RB LCB BODY RCB

    2 BODY: DECLARATION_STATEMENTS PROGRAM_STATEMENTS

    3 DECLARATION_STATEMENTS: DECLARATION_STATEMENT DECLARATION_STATEMENTS
    4                       | DECLARATION_STATEMENT

    5 PROGRAM_STATEMENTS: PROGRAM_STATEMENT PROGRAM_STATEMENTS
    6                   | PROGRAM_STATEMENT

    7 DECLARATION_STATEMENT: INT VAR_LIST SC

    8 VAR_LIST: VAR COMA VAR_LIST
    9         | VAR

   10 PROGRAM_STATEMENT: VAR EQ A_EXPN SC

   11 A_EXPN: A_EXPN OP A_EXPN
   12       | LB A_EXPN RB
   13       | VAR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    HEADER (258) 1
    INT (259) 1 7
    MAIN (260) 1
    LB (261) 1 12
    RB (262) 1 12
    LCB (263) 1
    RCB (264) 1
    SC (265) 7 10
    COMA (266) 8
    VAR (267) 8 9 10 13
    EQ (268) 10
    OP (269) 11


Nonterminals, with rules where they appear

    $accept (15)
        on left: 0
    prm (16)
        on left: 1
        on right: 0
    BODY (17)
        on left: 2
        on right: 1
    DECLARATION_STATEMENTS (18)
        on left: 3 4
        on right: 2 3
    PROGRAM_STATEMENTS (19)
        on left: 5 6
        on right: 2 5
    DECLARATION_STATEMENT (20)
        on left: 7
        on right: 3 4
    VAR_LIST (21)
        on left: 8 9
        on right: 7 8
    PROGRAM_STATEMENT (22)
        on left: 10
        on right: 5 6
    A_EXPN (23)
        on left: 11 12 13
        on right: 10 11 12


State 0

    0 $accept: . prm $end

    HEADER  shift, and go to state 1

    prm  go to state 2


State 1

    1 prm: HEADER . INT MAIN LB RB LCB BODY RCB

    INT  shift, and go to state 3


State 2

    0 $accept: prm . $end

    $end  shift, and go to state 4


State 3

    1 prm: HEADER INT . MAIN LB RB LCB BODY RCB

    MAIN  shift, and go to state 5


State 4

    0 $accept: prm $end .

    $default  accept


State 5

    1 prm: HEADER INT MAIN . LB RB LCB BODY RCB

    LB  shift, and go to state 6


State 6

    1 prm: HEADER INT MAIN LB . RB LCB BODY RCB

    RB  shift, and go to state 7


State 7

    1 prm: HEADER INT MAIN LB RB . LCB BODY RCB

    LCB  shift, and go to state 8


State 8

    1 prm: HEADER INT MAIN LB RB LCB . BODY RCB

    INT  shift, and go to state 9

    BODY                    go to state 10
    DECLARATION_STATEMENTS  go to state 11
    DECLARATION_STATEMENT   go to state 12


State 9

    7 DECLARATION_STATEMENT: INT . VAR_LIST SC

    VAR  shift, and go to state 13

    VAR_LIST  go to state 14


State 10

    1 prm: HEADER INT MAIN LB RB LCB BODY . RCB

    RCB  shift, and go to state 15


State 11

    2 BODY: DECLARATION_STATEMENTS . PROGRAM_STATEMENTS

    VAR  shift, and go to state 16

    PROGRAM_STATEMENTS  go to state 17
    PROGRAM_STATEMENT   go to state 18


State 12

    3 DECLARATION_STATEMENTS: DECLARATION_STATEMENT . DECLARATION_STATEMENTS
    4                       | DECLARATION_STATEMENT .

    INT  shift, and go to state 9

    $default  reduce using rule 4 (DECLARATION_STATEMENTS)

    DECLARATION_STATEMENTS  go to state 19
    DECLARATION_STATEMENT   go to state 12


State 13

    8 VAR_LIST: VAR . COMA VAR_LIST
    9         | VAR .

    COMA  shift, and go to state 20

    $default  reduce using rule 9 (VAR_LIST)


State 14

    7 DECLARATION_STATEMENT: INT VAR_LIST . SC

    SC  shift, and go to state 21


State 15

    1 prm: HEADER INT MAIN LB RB LCB BODY RCB .

    $default  reduce using rule 1 (prm)


State 16

   10 PROGRAM_STATEMENT: VAR . EQ A_EXPN SC

    EQ  shift, and go to state 22


State 17

    2 BODY: DECLARATION_STATEMENTS PROGRAM_STATEMENTS .

    $default  reduce using rule 2 (BODY)


State 18

    5 PROGRAM_STATEMENTS: PROGRAM_STATEMENT . PROGRAM_STATEMENTS
    6                   | PROGRAM_STATEMENT .

    VAR  shift, and go to state 16

    $default  reduce using rule 6 (PROGRAM_STATEMENTS)

    PROGRAM_STATEMENTS  go to state 23
    PROGRAM_STATEMENT   go to state 18


State 19

    3 DECLARATION_STATEMENTS: DECLARATION_STATEMENT DECLARATION_STATEMENTS .

    $default  reduce using rule 3 (DECLARATION_STATEMENTS)


State 20

    8 VAR_LIST: VAR COMA . VAR_LIST

    VAR  shift, and go to state 13

    VAR_LIST  go to state 24


State 21

    7 DECLARATION_STATEMENT: INT VAR_LIST SC .

    $default  reduce using rule 7 (DECLARATION_STATEMENT)


State 22

   10 PROGRAM_STATEMENT: VAR EQ . A_EXPN SC

    LB   shift, and go to state 25
    VAR  shift, and go to state 26

    A_EXPN  go to state 27


State 23

    5 PROGRAM_STATEMENTS: PROGRAM_STATEMENT PROGRAM_STATEMENTS .

    $default  reduce using rule 5 (PROGRAM_STATEMENTS)


State 24

    8 VAR_LIST: VAR COMA VAR_LIST .

    $default  reduce using rule 8 (VAR_LIST)


State 25

   12 A_EXPN: LB . A_EXPN RB

    LB   shift, and go to state 25
    VAR  shift, and go to state 26

    A_EXPN  go to state 28


State 26

   13 A_EXPN: VAR .

    $default  reduce using rule 13 (A_EXPN)


State 27

   10 PROGRAM_STATEMENT: VAR EQ A_EXPN . SC
   11 A_EXPN: A_EXPN . OP A_EXPN

    SC  shift, and go to state 29
    OP  shift, and go to state 30


State 28

   11 A_EXPN: A_EXPN . OP A_EXPN
   12       | LB A_EXPN . RB

    RB  shift, and go to state 31
    OP  shift, and go to state 30


State 29

   10 PROGRAM_STATEMENT: VAR EQ A_EXPN SC .

    $default  reduce using rule 10 (PROGRAM_STATEMENT)


State 30

   11 A_EXPN: A_EXPN OP . A_EXPN

    LB   shift, and go to state 25
    VAR  shift, and go to state 26

    A_EXPN  go to state 32


State 31

   12 A_EXPN: LB A_EXPN RB .

    $default  reduce using rule 12 (A_EXPN)


State 32

   11 A_EXPN: A_EXPN . OP A_EXPN
   11       | A_EXPN OP A_EXPN .

    OP  shift, and go to state 30

    OP        [reduce using rule 11 (A_EXPN)]
    $default  reduce using rule 11 (A_EXPN)
